Actividad  1, Semana 2:
1. Crear un arreglo con los siguientes valores:
	7, 4, 2, 1,10, 5, 6
	1.1 Ordenar el arreglo de menor a mayor
	1.2 Ordenar el arreglo de menor a mayor

2. Crear un arreglo con los giuientes valores:
	2,4,6,6,19,3,1,0,5,2,9
	2.1 Eliminar los números duplicados
	2.2 Ordenar el arreglo sin duplicador de menor a mayor
	2.3 Ordenar el arreglo sin duplicados de mayor a menor

3. Crear un triqui.	

SOLUCION

1.Crear un arreglo con los siguientes valores:
7, 4, 2, 1,10, 5, 6

public class Main {
public static void main(String[] args) {

int [] arr = new int[]{7,4,2,1,10,5,6};
for(int i : arr) {
System.out.print(i+" ");
}
for (int i = 0; i < arr.length; i++) {
for (int j = 0; j < arr.length; j++) {
if (arr[i] < arr[j]) {
int temp = arr[i];
arr[i] = arr[j];
arr[j] = temp;
}
}
}
System.out.println("\nAfter Sorting...");
for (int i : arr) {
System.out.print(i+" ");
}
for (int i = 0; i < arr.length; i++) {
for (int j = 0; j < arr.length; j++) {
if (arr[i] > arr[j]) {
int temp = arr[i];
arr[i] = arr[j];
arr[j] = temp;
}
}
}
System.out.println("\nAfter Sorting...");
for (int i : arr) {
System.out.print(i+" ");
}
}
}
----------------------------------------------------------

2. Crear un arreglo con los giuientes valores:2,4,6,6,19,3,1,0,5,2,9

Eliminar los números duplicados

public class Main{  
public static int remove_Duplicate_Elements(int arr[], int n){  
        if (n==0 || n==1){  
            return n;  
        }  
        int[] tempA = new int[n];  
        int j = 0;  
        for (int i=0; i<n-1; i++){  
            if (arr[i] != arr[i+1]){  
                tempA[j++] = arr[i];  
            }  
         }  
        tempA[j++] = arr[n-1];       
        for (int i=0; i<j; i++){  
            arr[i] = tempA[i];  
        }  
        return j;  
    }  
       
    public static void main (String[] args) {  
        int arr[] = {2,4,6,6,19,3,1,0,5,2,9};  
        int length = arr.length;  
        length = remove_Duplicate_Elements(arr, length);    
        for (int i=0; i<length; i++)  
           System.out.print(arr[i]+" ");  
    }  
}

Ordenar el arreglo sin duplicador de menor a mayor
Ordenar el arreglo sin duplicador de mayor a menor

public class Main {
    
    public static void main(String[] args) {
        int[] arr = {2,4,6,6,19,3,1,0,5,2,9};
        System.out.println("Ordenar");
        for (int i : arr) {
            System.out.printf("%d, ", i);
        }
    
        ordenarPorSeleccion(arr);

        System.out.println("\nForma Acendente");
        for (int i : arr) {
            System.out.printf("%d, ", i );
        }
        ordenarPorSeleccionMayor(arr);
        System.out.println("\nForma Descendente");
        for (int i : arr) {
            System.out.printf("%d, ", i );
        }
    }
    
    public static int remove_Duplicates(int a[], int n)
    {
        if (n == 0 || n == 1) {
            return n;
        }
        int j = 0;
        for (int i = 0; i < n - 1; i++) {
            if (a[i] != a[i + 1]) {
                a[j++] = a[i];
            }
        }

        a[j++] = a[n - 1];
        return j;
    }

    public static void main(String[] args)
    {
        int a[] = {2,4,6,6,19,3,1,0,5,2,9};
        int n = a.length;
        int j=0;
        j = remove_Duplicates(a, n);

        for (int i = 0; i < j; i++)
            System.out.print(a[i] + " ");
    }
}

    public static void ordenarPorSeleccion(int[] arr) {
        for (int i = 0; i < arr.length - 1; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] > arr[j]) {
                    int temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }

    public static void ordenarPorSeleccionMayor(int[] arr) {
            for (int i = 0; i < arr.length - 1; i++) {
                for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] < arr[j] ) {
                    int temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }
    }
}
